/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.awt.Toolkit;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author proxc
 */
public class Vathmologia extends javax.swing.JFrame {

    /**
     * Creates new form Home_Data
     */
    public Vathmologia() {
        fillCombos();
        initComponents();
        viewPanel.setBackground(new java.awt.Color(35,90,190));
        showView();
        setIcon();
    }
    
    public void setIcon(){
        setIconImage(Toolkit.getDefaultToolkit().createImage(getClass().getResource("binder_30px.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        viewPanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        addPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        editPanel = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        botPanel = new javax.swing.JPanel();
        viewGrades = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        refreshViewButton = new javax.swing.JButton();
        viewFilterSidCombo = new javax.swing.JComboBox<>();
        viewFilterEtosCombo = new javax.swing.JComboBox<>();
        addGrades = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        onomaLabel = new javax.swing.JLabel();
        kwdikosMathitiField = new javax.swing.JTextField();
        kataxorisiBtn = new javax.swing.JButton();
        bathmosaLabel = new javax.swing.JLabel();
        mathimaLabel = new javax.swing.JLabel();
        tetraminoCombo = new javax.swing.JComboBox<>();
        etosVathmCombo = new javax.swing.JComboBox<>();
        tetraminoLabel = new javax.swing.JLabel();
        vathmosCombo = new javax.swing.JComboBox<>();
        etosΒathLabel = new javax.swing.JLabel();
        stoixeiaMathitisLabel = new javax.swing.JLabel();
        kwdikosMathimatosField = new javax.swing.JTextField();
        stoixeiaMathimatosLabel = new javax.swing.JLabel();
        editGrades = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(45, 118, 232));

        jLabel15.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main/images/w_exam_50px.png"))); // NOI18N
        jLabel15.setText("Βαθμολογίες");

        viewPanel.setBackground(new java.awt.Color(45, 118, 232));
        viewPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewPanelMouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Προβολή");

        javax.swing.GroupLayout viewPanelLayout = new javax.swing.GroupLayout(viewPanel);
        viewPanel.setLayout(viewPanelLayout);
        viewPanelLayout.setHorizontalGroup(
            viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        viewPanelLayout.setVerticalGroup(
            viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                .addContainerGap())
        );

        addPanel.setBackground(new java.awt.Color(45, 118, 232));
        addPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addPanelMouseClicked(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Προσθήκη");

        javax.swing.GroupLayout addPanelLayout = new javax.swing.GroupLayout(addPanel);
        addPanel.setLayout(addPanelLayout);
        addPanelLayout.setHorizontalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addPanelLayout.setVerticalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                .addContainerGap())
        );

        editPanel.setBackground(new java.awt.Color(45, 118, 232));
        editPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editPanelMouseClicked(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Επεξεργασία");

        javax.swing.GroupLayout editPanelLayout = new javax.swing.GroupLayout(editPanel);
        editPanel.setLayout(editPanelLayout);
        editPanelLayout.setHorizontalGroup(
            editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        editPanelLayout.setVerticalGroup(
            editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel15))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(viewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(viewPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        botPanel.setLayout(new java.awt.CardLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ΑΜ", "Όνομα", "Επώνυμο", "Μάθημα", "Έτος Βαθμολόγησης", "Βαθμολογία A' Tετραμήνου", "Βαθμολογία B' Τεραμήνου", "Τελική Εξέταση"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(1);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(1);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        refreshViewButton.setText("Ανανέωση");
        refreshViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshViewButtonActionPerformed(evt);
            }
        });

        viewFilterSidCombo.setModel(new javax.swing.DefaultComboBoxModel<>(viewFilterSid));
        viewFilterSidCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewFilterSidComboActionPerformed(evt);
            }
        });

        viewFilterEtosCombo.setModel(new javax.swing.DefaultComboBoxModel<>(viewFilterEtos));

        javax.swing.GroupLayout viewGradesLayout = new javax.swing.GroupLayout(viewGrades);
        viewGrades.setLayout(viewGradesLayout);
        viewGradesLayout.setHorizontalGroup(
            viewGradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1049, Short.MAX_VALUE)
            .addGroup(viewGradesLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(viewFilterSidCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81)
                .addComponent(viewFilterEtosCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(refreshViewButton)
                .addContainerGap())
        );
        viewGradesLayout.setVerticalGroup(
            viewGradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewGradesLayout.createSequentialGroup()
                .addGroup(viewGradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refreshViewButton)
                    .addComponent(viewFilterSidCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewFilterEtosCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE))
        );

        botPanel.add(viewGrades, "card2");

        addGrades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addGradesMouseClicked(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Φόρμα εισαγωγής βαθμών"));
        jPanel5.setFont(new java.awt.Font("Lucida Sans", 0, 18)); // NOI18N
        jPanel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel5MouseClicked(evt);
            }
        });

        onomaLabel.setFont(new java.awt.Font("Lucida Sans", 1, 18)); // NOI18N
        onomaLabel.setText("ΑΜ Μαθητή :");

        kwdikosMathitiField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                kwdikosMathitiFieldFocusLost(evt);
            }
        });
        kwdikosMathitiField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kwdikosMathitiFieldActionPerformed(evt);
            }
        });

        kataxorisiBtn.setText("Καταχώρηση");
        kataxorisiBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kataxorisiBtnActionPerformed(evt);
            }
        });

        bathmosaLabel.setFont(new java.awt.Font("Lucida Sans", 1, 18)); // NOI18N
        bathmosaLabel.setLabelFor(vathmosCombo);
        bathmosaLabel.setText("Βαθμός :");

        mathimaLabel.setFont(new java.awt.Font("Lucida Sans", 1, 18)); // NOI18N
        mathimaLabel.setText("Κωδικός Μαθήματος :");

        tetraminoLabel.setFont(new java.awt.Font("Lucida Sans", 1, 18)); // NOI18N
        tetraminoLabel.setLabelFor(tetraminoCombo);
        tetraminoLabel.setText("Τετράμηνο :");

        vathmosCombo.setModel(new javax.swing.DefaultComboBoxModel<>(vathmos));

        etosΒathLabel.setFont(new java.awt.Font("Lucida Sans", 1, 18)); // NOI18N
        etosΒathLabel.setLabelFor(etosVathmCombo);
        etosΒathLabel.setText("Έτος :");

        kwdikosMathimatosField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                kwdikosMathimatosFieldFocusLost(evt);
            }
        });
        kwdikosMathimatosField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kwdikosMathimatosFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mathimaLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(onomaLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(stoixeiaMathitisLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                    .addComponent(kwdikosMathimatosField, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                    .addComponent(kwdikosMathitiField)
                    .addComponent(stoixeiaMathimatosLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(kataxorisiBtn)
                        .addGap(215, 215, 215))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bathmosaLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tetraminoLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(etosΒathLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(etosVathmCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, 180, Short.MAX_VALUE)
                            .addComponent(tetraminoCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(vathmosCombo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(83, 83, 83))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(onomaLabel)
                    .addComponent(kwdikosMathitiField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(stoixeiaMathitisLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mathimaLabel)
                    .addComponent(kwdikosMathimatosField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(stoixeiaMathimatosLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bathmosaLabel)
                    .addComponent(vathmosCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tetraminoLabel)
                    .addComponent(tetraminoCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etosΒathLabel)
                    .addComponent(etosVathmCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(kataxorisiBtn)
                .addGap(22, 22, 22))
        );

        tetraminoCombo.setModel(new javax.swing.DefaultComboBoxModel<>(tetramino));
        etosVathmCombo.setModel(new javax.swing.DefaultComboBoxModel<>(etosCombo));

        javax.swing.GroupLayout addGradesLayout = new javax.swing.GroupLayout(addGrades);
        addGrades.setLayout(addGradesLayout);
        addGradesLayout.setHorizontalGroup(
            addGradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addGradesLayout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(353, Short.MAX_VALUE))
        );
        addGradesLayout.setVerticalGroup(
            addGradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addGradesLayout.createSequentialGroup()
                .addContainerGap(62, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        botPanel.add(addGrades, "card3");

        javax.swing.GroupLayout editGradesLayout = new javax.swing.GroupLayout(editGrades);
        editGrades.setLayout(editGradesLayout);
        editGradesLayout.setHorizontalGroup(
            editGradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1049, Short.MAX_VALUE)
        );
        editGradesLayout.setVerticalGroup(
            editGradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 464, Short.MAX_VALUE)
        );

        botPanel.add(editGrades, "card4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(botPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void viewPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewPanelMouseClicked
        // TODO add your handling code here:
        viewGrades.setVisible(true);
        addGrades.setVisible(false);
        editGrades.setVisible(false);
        viewPanel.setBackground(new java.awt.Color(35,90,190));
        addPanel.setBackground(new java.awt.Color(45,118,232));
        editPanel.setBackground(new java.awt.Color(45,118,232));
    }//GEN-LAST:event_viewPanelMouseClicked

    private void addPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addPanelMouseClicked
        // TODO add your handling code here:
        viewGrades.setVisible(false);
        addGrades.setVisible(true);
        editGrades.setVisible(false);
        viewPanel.setBackground(new java.awt.Color(45,118,232));
        addPanel.setBackground(new java.awt.Color(35,90,190)); 
        editPanel.setBackground(new java.awt.Color(45,118,232));
    }//GEN-LAST:event_addPanelMouseClicked

    private void kwdikosMathitiFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kwdikosMathitiFieldFocusLost
        // TODO add your handling code here:
        showStudentViaID(kwdikosMathitiField.getText());
    }//GEN-LAST:event_kwdikosMathitiFieldFocusLost

    private void jPanel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseClicked
        // TODO add your handling code here:
        jPanel5.requestFocusInWindow();
    }//GEN-LAST:event_jPanel5MouseClicked

    private void kwdikosMathimatosFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kwdikosMathimatosFieldFocusLost
        // TODO add your handling code here:
        showLessonViaID(kwdikosMathimatosField.getText());
    }//GEN-LAST:event_kwdikosMathimatosFieldFocusLost

    private void addGradesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addGradesMouseClicked
        // TODO add your handling code here:
        jPanel5.requestFocusInWindow();
    }//GEN-LAST:event_addGradesMouseClicked

    private void kwdikosMathitiFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kwdikosMathitiFieldActionPerformed
        // TODO add your handling code here:
        kwdikosMathimatosField.requestFocus();
    }//GEN-LAST:event_kwdikosMathitiFieldActionPerformed

    private void kwdikosMathimatosFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kwdikosMathimatosFieldActionPerformed
        // TODO add your handling code here:
        vathmosCombo.requestFocus();
    }//GEN-LAST:event_kwdikosMathimatosFieldActionPerformed

    private void kataxorisiBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kataxorisiBtnActionPerformed
        // TODO add your handling code here:
        addNewVathmologia(kwdikosMathitiField.getText(),
                          kwdikosMathimatosField.getText(),
                          String.valueOf(vathmosCombo.getSelectedItem()),
                          tetraminoCombo.getSelectedIndex()+1,
                          String.valueOf(etosVathmCombo.getSelectedItem()));
    }//GEN-LAST:event_kataxorisiBtnActionPerformed

    private void editPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editPanelMouseClicked
        // TODO add your handling code here:
        viewGrades.setVisible(false);
        addGrades.setVisible(false);
        editGrades.setVisible(true);
        viewPanel.setBackground(new java.awt.Color(45,118,232));
        addPanel.setBackground(new java.awt.Color(45,118,232));
        editPanel.setBackground(new java.awt.Color(35,90,190)); 
    }//GEN-LAST:event_editPanelMouseClicked

    private void viewFilterSidComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewFilterSidComboActionPerformed
        // TODO add your handling code here:
        refreshViewButton.requestFocus();
    }//GEN-LAST:event_viewFilterSidComboActionPerformed

    private void refreshViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshViewButtonActionPerformed
        // TODO add your handling code here:
        showView(String.valueOf(viewFilterSidCombo.getSelectedItem()),String.valueOf(viewFilterEtosCombo.getSelectedItem()));
    }//GEN-LAST:event_refreshViewButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vathmologia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vathmologia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vathmologia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vathmologia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
       

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vathmologia().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addGrades;
    private javax.swing.JPanel addPanel;
    private javax.swing.JLabel bathmosaLabel;
    private javax.swing.JPanel botPanel;
    private javax.swing.JPanel editGrades;
    private javax.swing.JPanel editPanel;
    private javax.swing.JComboBox<String> etosVathmCombo;
    private javax.swing.JLabel etosΒathLabel;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton kataxorisiBtn;
    private javax.swing.JTextField kwdikosMathimatosField;
    private javax.swing.JTextField kwdikosMathitiField;
    private javax.swing.JLabel mathimaLabel;
    private javax.swing.JLabel onomaLabel;
    private javax.swing.JButton refreshViewButton;
    private javax.swing.JLabel stoixeiaMathimatosLabel;
    private javax.swing.JLabel stoixeiaMathitisLabel;
    private javax.swing.JComboBox<String> tetraminoCombo;
    private javax.swing.JLabel tetraminoLabel;
    private javax.swing.JComboBox<String> vathmosCombo;
    private javax.swing.JComboBox<String> viewFilterEtosCombo;
    private javax.swing.JComboBox<String> viewFilterSidCombo;
    private javax.swing.JPanel viewGrades;
    private javax.swing.JPanel viewPanel;
    // End of variables declaration//GEN-END:variables
    
    String vathmos[] = {"1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20"};
    String tetramino[] = {"1o Τετράμηνο", "2ο Τετράμηνο", "Τελική Εξέταση"};
    String etosCombo[] = new String[61];
    String[] viewChanger = {"1ο, 2ο και Τελικες εξετάσεις", "1ο και 2ο εξαμηνο",
                           "Τελικές Εξετάσεις", "2ο τετραμηνο", "1o τετραμηνο"};
    String[] viewFilterSid;

    String viewFilterEtos[] = new String[62];
    
    private void fillCombos(){
        viewFilterSid = new String[MathitisAdmin.getSid()+1];
        viewFilterSid[0]="Εύρεση μαθητη μεσω ΑΜ : ";
        viewFilterEtos[0] = "Εύρεση μαθητών μεσω ετους βαθμολογίας : ";
        for(int i = 1; i < MathitisAdmin.getSid()+1; i++){
            viewFilterSid[i]=String.valueOf(i);
        }
        for (int i = 0; i < 61; i++) {
            int etos = 2020;
            etosCombo[i] = String.valueOf(etos - i);
            viewFilterEtos[i+1] = String.valueOf(etos-i);
        }
    }


        
    private void showStudentViaID(String ext){
        try {
            int num  = Integer.valueOf(ext);
            if((num< MathitisAdmin.getSid()) && (num >0)){
                String selectString = "SELECT selVathmStudentViaID(?);";
                PreparedStatement aStatePG = DBPostresqlAdmin.getPrepareStatement(selectString);
                ResultSet rs = DBPostresqlAdmin.getResultset();
                try {
                    aStatePG.setInt(1, num);
                    rs = aStatePG.executeQuery();        
                    String holder = "";
                    String columnvalue;
                    rs.next();
                    columnvalue = rs.getString(1);   
                    String[] a = columnvalue.substring(1, columnvalue.length()-1).split(",");
                        for (int i = 0; i< a.length; i++) {
                            holder += a[i] + " ";
                        }
                        stoixeiaMathitisLabel.setText(holder);
                } catch(SQLException ex) {
                    System.out.println("\n -- SQL Exception --- \n");
                    while(ex != null) {
                        System.out.println("Message: " + ex.getMessage());
                        ex = ex.getNextException();
                    }
                } 
            }else{
                kwdikosMathitiField.setText("");
                stoixeiaMathitisLabel.setText("");
                String temp = "<html>To AM που δωσατε ειναι δεν υπαρχει <br>Παρακαλω δωστε αριθμους απο το 1 εως "+ String.valueOf(MathitisAdmin.getSid()-1);
                JOptionPane.showMessageDialog(null, temp, "Προσοχή!", JOptionPane.WARNING_MESSAGE);
            }
        } catch (Exception e) {
            kwdikosMathitiField.setText("");
            stoixeiaMathitisLabel.setText("");
            String temp = "<html>To AM που δωσατε ειναι δεν υπαρχει <br>Παρακαλω δωστε αριθμους απο το 1 εως "+ String.valueOf(MathitisAdmin.getSid()-1);
            JOptionPane.showMessageDialog(null, temp, "Προσοχή!", JOptionPane.WARNING_MESSAGE);
            System.out.println("ti pige strava: " + e.getMessage());
        }

    }

    private void showLessonViaID(String ext){
        try {
            int num  = Integer.valueOf(ext);
            if((Integer.valueOf(ext)< MathitisAdmin.getSid()) && (Integer.valueOf(ext)>0)){
                String selectString = "SELECT selVathmLessonViaID(?);";

                PreparedStatement aStatePG = DBPostresqlAdmin.getPrepareStatement(selectString);
                ResultSet rs = DBPostresqlAdmin.getResultset();
                try {
                    aStatePG.setInt(1, num);
                    rs = aStatePG.executeQuery();        
                    String holder = "";
                    String columnvalue;
                    rs.next();
                    columnvalue = rs.getString(1);   
                    String[] a = columnvalue.substring(1, columnvalue.length()-1).split(",");
                        for (int i = 0; i< a.length; i++) {
                            holder += a[i] + " ";
                        }

                        stoixeiaMathimatosLabel.setText(holder);

                } catch(SQLException ex) {
                    System.out.println("\n -- SQL Exception --- \n");
                    while(ex != null) {
                        System.out.println("Message: " + ex.getMessage());
                        ex = ex.getNextException();
                    }
                } 
            }else{
                kwdikosMathimatosField.setText("");
                stoixeiaMathitisLabel.setText("");
                String temp = "<html>To AM που δωσατε ειναι δεν υπαρχει <br>Παρακαλω δωστε αριθμους απο το 1 εως "+ String.valueOf(MathitisAdmin.getSid()-1);
                JOptionPane.showMessageDialog(null, temp, "Προσοχή!", JOptionPane.WARNING_MESSAGE);
            }    
        } catch (Exception e) {
            kwdikosMathimatosField.setText("");
            stoixeiaMathitisLabel.setText("");
            String temp = "<html>To AM που δωσατε ειναι δεν υπαρχει <br>Παρακαλω δωστε αριθμους απο το 1 εως "+ String.valueOf(MathitisAdmin.getSid()-1);
            JOptionPane.showMessageDialog(null, temp, "Προσοχή!", JOptionPane.WARNING_MESSAGE);
        }
        
    }

    private void addNewVathmologia(String sid,String mid, String vathmos, int eksamino, String etos){
        
        try {
            VathmologiaAdmin.addNewVathmologia(Integer.valueOf(sid), 
                                               Integer.valueOf(mid), 
                                               Integer.valueOf(vathmos), 
                                               eksamino, 
                                               Integer.valueOf(etos));
        } catch (Exception e) {
            System.out.println("kati xalase "+ e.getMessage());
        }
    }
    
    
    private void showView(String sid, String etos){
        
        if(sid.equals("Εύρεση μαθητη μεσω ΑΜ : ") && (etos.equals("Εύρεση μαθητών μεσω ετους βαθμολογίας : "))){
            showView();
        }else if (!sid.equals("Εύρεση μαθητη μεσω ΑΜ : ")&& (etos.equals("Εύρεση μαθητών μεσω ετους βαθμολογίας : "))){
            int num = Integer.valueOf(sid);
            showTwoTermsWithFinalExamsFilterSid(num);
            showOnePlusTwoTermsFilterSid(num);
            showFinalExamsFilterSid(num);
            showSecondTermFilterSid(num);
            showFirstTermFilterSid(num);
        }else if ((!sid.equals("Εύρεση μαθητη μεσω ΑΜ : ")&& (!etos.equals("Εύρεση μαθητών μεσω ετους βαθμολογίας : ")))){
            int etos1 = Integer.valueOf(etos);
            int sid1 = Integer.valueOf(sid);
            showTwoTermsWithFinalExamsFilterSidEtos(sid1,etos1);
            showOnePlusTwoTermsFilterSidEtos(sid1,etos1);
            showFinalExamsFilterSidEtos(sid1,etos1);
            showSecondTermFilterSidEtos(sid1,etos1);
            showFirstTermFilterSidEtos(sid1,etos1);
        }else if ((sid.equals("Εύρεση μαθητη μεσω ΑΜ : ") && (!etos.equals("Εύρεση μαθητών μεσω ετους βαθμολογίας : ")))){
            int num = Integer.valueOf(etos);
            showTwoTermsWithFinalExamsFilterEtos(num);
            showOnePlusTwoTermsFilterEtos(num);
            showFinalExamsFilterEtos(num);
            showSecondTermFilterEtos(num);
            showFirstTermFilterEtos(num);
            
        }
        
        
    }
    private void showView(){
        showTwoTermsWithFinalExams();
        showOnePlusTwoTerms();
        showFinalExams();
        showSecondTerm();
        showFirstTerm();
    }

    
    private void showTwoTermsWithFinalExams(){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String selectString = "SELECT selVathmTwoTermsWithFinalExams();";
        Statement aStatePG = DBPostresqlAdmin.getStatement();
        model.setRowCount(0);
        ResultSet rs = DBPostresqlAdmin.getResultset();
        try {
           rs = aStatePG.executeQuery(selectString);
            Object[] row = new Object[8];
            String columnvalue;
            
            while (rs.next()) {
                columnvalue = rs.getString(1);
                String[] a = columnvalue.substring(1, columnvalue.length()-1).split(",");
                for (int i = 0; i < a.length; i++) {
                    row[i] =a[i];
                }
                model.addRow(row);
            }
        } catch(SQLException ex) {
            System.out.println("\n -- SQL Exception --- \n");
            while(ex != null) {
		System.out.println("Message: " + ex.getMessage());
		ex = ex.getNextException();
            }
        
        }
    }
    private void showOnePlusTwoTerms(){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String selectString =  "SELECT selVathmOnePlusTwoTerms();";
        
        Statement aStatePG = DBPostresqlAdmin.getStatement();
        
        ResultSet rs = DBPostresqlAdmin.getResultset();
        try {
           rs = aStatePG.executeQuery(selectString);
            Object[] row = new Object[8];
            String columnvalue;
            
            while (rs.next()) {
                columnvalue = rs.getString(1);
                String[] a = columnvalue.substring(1, columnvalue.length()-1).split(",");
                for (int i = 0; i < a.length; i++) {
                    row[i] =a[i];
                }
                model.addRow(row);
            }
        } catch(SQLException ex) {
            System.out.println("\n -- SQL Exception --- \n");
            while(ex != null) {
		System.out.println("Message: " + ex.getMessage());
		ex = ex.getNextException();
            }
        
        }
    }
    
    private void showFinalExams(){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String selectString = "SELECT selVathmFinalExams();";
        Statement aStatePG = DBPostresqlAdmin.getStatement();
        ResultSet rs = DBPostresqlAdmin.getResultset();
        try {
           rs = aStatePG.executeQuery(selectString);
            Object[] row = new Object[8];
            String columnvalue;
            
            while (rs.next()) {
                columnvalue = rs.getString(1);
                String[] a = columnvalue.substring(1, columnvalue.length()-1).split(",");
                for (int i = 0; i < a.length; i++) {
                    row[i] =a[i];
                }
                model.addRow(row);
            }
        } catch(SQLException ex) {
            System.out.println("\n -- SQL Exception --- \n");
            while(ex != null) {
		System.out.println("Message: " + ex.getMessage());
		ex = ex.getNextException();
            }
        }
    }
    private void showSecondTerm(){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String selectString = "	SELECT selVathmSecondTerm();";
        Statement aStatePG = DBPostresqlAdmin.getStatement();
        
        ResultSet rs = DBPostresqlAdmin.getResultset();
        try {
           rs = aStatePG.executeQuery(selectString);
            Object[] row = new Object[8];
            String columnvalue;
            
            while (rs.next()) {
                columnvalue = rs.getString(1);
                String[] a = columnvalue.substring(1, columnvalue.length()-1).split(",");
                for (int i = 0; i < a.length; i++) {
                    row[i] =a[i];
                }
                model.addRow(row);
            }
        } catch(SQLException ex) {
            System.out.println("\n -- SQL Exception --- \n");
            while(ex != null) {
		System.out.println("Message: " + ex.getMessage());
		ex = ex.getNextException();
            }
        }
    }
        
    private void showFirstTerm(){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String selectString = "	SELECT selVathmFirstTerm();";
        Statement aStatePG = DBPostresqlAdmin.getStatement();
       
        ResultSet rs = DBPostresqlAdmin.getResultset();
        try {
            rs = aStatePG.executeQuery(selectString);
            Object[] row = new Object[8];
            String columnvalue;
            
            while (rs.next()) {
                columnvalue = rs.getString(1);
                String[] a = columnvalue.substring(1, columnvalue.length()-1).split(",");
                for (int i = 0; i < a.length; i++) {
                    row[i] =a[i];
                }
                model.addRow(row);
            }
        } catch(SQLException ex) {
            System.out.println("\n -- SQL Exception --- \n");
            while(ex != null) {
		System.out.println("Message: " + ex.getMessage());
		ex = ex.getNextException();
            }
        }
    }  

    private void showTwoTermsWithFinalExamsFilterSid(int ext){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String selectString = "SELECT selVathmTwoTermsWithFinalExamsFilterSid(?);";
        PreparedStatement aStatePG = DBPostresqlAdmin.getPrepareStatement(selectString);
        model.setRowCount(0);
        ResultSet rs = DBPostresqlAdmin.getResultset();
        try {
            aStatePG.setInt(1, ext);
            rs = aStatePG.executeQuery();
            Object[] row = new Object[8];
            String columnvalue;
            while (rs.next()) {
                columnvalue = rs.getString(1);
                String[] a = columnvalue.substring(1, columnvalue.length()-1).split(",");
                for (int i = 0; i < a.length; i++) {
                    row[i] =a[i];
                }
                model.addRow(row);
            }
        } catch(SQLException ex) {
            System.out.println("\n -- SQL Exception --- \n");
            while(ex != null) {
		System.out.println("Message: " + ex.getMessage());
		ex = ex.getNextException();
            }
        
        }
    }
    private void showOnePlusTwoTermsFilterSid(int ext){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String selectString = "SELECT selVathmOnePlusTwoTermsFilterSid(?);";
        PreparedStatement aStatePG = DBPostresqlAdmin.getPrepareStatement(selectString);
        ResultSet rs = DBPostresqlAdmin.getResultset();
        try {
            aStatePG.setInt(1, ext);
            rs = aStatePG.executeQuery();
            Object[] row = new Object[8];
            String columnvalue;
            while (rs.next()) {
                columnvalue = rs.getString(1);
                String[] a = columnvalue.substring(1, columnvalue.length()-1).split(",");
                for (int i = 0; i < a.length; i++) {
                    row[i] =a[i];
                }
                model.addRow(row);
            }
        } catch(SQLException ex) {
            System.out.println("\n -- SQL Exception --- \n");
            while(ex != null) {
		System.out.println("Message: " + ex.getMessage());
		ex = ex.getNextException();
            }
        
        }
        
    }
    private void showFinalExamsFilterSid(int ext){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String selectString = "SELECT selVathmFinalExamsFilterSid(?);";
        PreparedStatement aStatePG = DBPostresqlAdmin.getPrepareStatement(selectString);
        ResultSet rs = DBPostresqlAdmin.getResultset();
        try {
            aStatePG.setInt(1, ext);
            rs = aStatePG.executeQuery();
            Object[] row = new Object[8];
            String columnvalue;
            while (rs.next()) {
                columnvalue = rs.getString(1);
                String[] a = columnvalue.substring(1, columnvalue.length()-1).split(",");
                for (int i = 0; i < a.length; i++) {
                    row[i] =a[i];
                }
                model.addRow(row);
            }
        } catch(SQLException ex) {
            System.out.println("\n -- SQL Exception --- \n");
            while(ex != null) {
		System.out.println("Message: " + ex.getMessage());
		ex = ex.getNextException();
            }
        
        }
    }
    private void showSecondTermFilterSid(int ext){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String selectString = "SELECT selVathmSecondTermFilterSid(?);";
        PreparedStatement aStatePG = DBPostresqlAdmin.getPrepareStatement(selectString);
        ResultSet rs = DBPostresqlAdmin.getResultset();
        try {
            aStatePG.setInt(1, ext);
            rs = aStatePG.executeQuery();
            Object[] row = new Object[8];
            String columnvalue;
            while (rs.next()) {
                columnvalue = rs.getString(1);
                String[] a = columnvalue.substring(1, columnvalue.length()-1).split(",");
                for (int i = 0; i < a.length; i++) {
                    row[i] =a[i];
                }
                model.addRow(row);
            }
        } catch(SQLException ex) {
            System.out.println("\n -- SQL Exception --- \n");
            while(ex != null) {
		System.out.println("Message: " + ex.getMessage());
		ex = ex.getNextException();
            }
        
        }
    }
    private void showFirstTermFilterSid(int ext){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String selectString = "SELECT selVathmFirstTermFilterSid(?);";
        PreparedStatement aStatePG = DBPostresqlAdmin.getPrepareStatement(selectString);
        ResultSet rs = DBPostresqlAdmin.getResultset();
        try {
            aStatePG.setInt(1, ext);
            rs = aStatePG.executeQuery();
            Object[] row = new Object[8];
            String columnvalue;
            while (rs.next()) {
                columnvalue = rs.getString(1);
                String[] a = columnvalue.substring(1, columnvalue.length()-1).split(",");
                for (int i = 0; i < a.length; i++) {
                    row[i] =a[i];
                }
                model.addRow(row);
            }
        } catch(SQLException ex) {
            System.out.println("\n -- SQL Exception --- \n");
            while(ex != null) {
		System.out.println("Message: " + ex.getMessage());
		ex = ex.getNextException();
            }
        
        }
    }
    
    private void showTwoTermsWithFinalExamsFilterEtos(int etos){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String selectString = "SELECT selVathmTwoTermsWithFinalExamsFilterEtos(?);";
        PreparedStatement aStatePG = DBPostresqlAdmin.getPrepareStatement(selectString);
        model.setRowCount(0);
        ResultSet rs = DBPostresqlAdmin.getResultset();
        try {
            aStatePG.setInt(1, etos);
            rs = aStatePG.executeQuery();
            Object[] row = new Object[8];
            String columnvalue;
            while (rs.next()) {
                columnvalue = rs.getString(1);
                String[] a = columnvalue.substring(1, columnvalue.length()-1).split(",");
                for (int i = 0; i < a.length; i++) {
                    row[i] =a[i];
                }
                model.addRow(row);
            }
        } catch(SQLException ex) {
            System.out.println("\n -- SQL Exception --- \n");
            while(ex != null) {
		System.out.println("Message: " + ex.getMessage());
		ex = ex.getNextException();
            }
        
        }
    }
    private void showOnePlusTwoTermsFilterEtos(int etos){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String selectString = "SELECT selVathmOnePlusTwoTermsFilterEtos(?);";
        PreparedStatement aStatePG = DBPostresqlAdmin.getPrepareStatement(selectString);
        ResultSet rs = DBPostresqlAdmin.getResultset();
        try {
            aStatePG.setInt(1, etos);
            rs = aStatePG.executeQuery();
            Object[] row = new Object[8];
            String columnvalue;
            while (rs.next()) {
                columnvalue = rs.getString(1);
                String[] a = columnvalue.substring(1, columnvalue.length()-1).split(",");
                for (int i = 0; i < a.length; i++) {
                    row[i] =a[i];
                }
                model.addRow(row);
            }
        } catch(SQLException ex) {
            System.out.println("\n -- SQL Exception --- \n");
            while(ex != null) {
		System.out.println("Message: " + ex.getMessage());
		ex = ex.getNextException();
            }
        
        }
        
    }
    private void showFinalExamsFilterEtos(int etos){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String selectString = "SELECT selVathmFinalExamsFilterEtos(?);";
        PreparedStatement aStatePG = DBPostresqlAdmin.getPrepareStatement(selectString);
        ResultSet rs = DBPostresqlAdmin.getResultset();
        try {
            aStatePG.setInt(1, etos);
            rs = aStatePG.executeQuery();
            Object[] row = new Object[8];
            String columnvalue;
            while (rs.next()) {
                columnvalue = rs.getString(1);
                String[] a = columnvalue.substring(1, columnvalue.length()-1).split(",");
                for (int i = 0; i < a.length; i++) {
                    row[i] =a[i];
                }
                model.addRow(row);
            }
        } catch(SQLException ex) {
            System.out.println("\n -- SQL Exception --- \n");
            while(ex != null) {
		System.out.println("Message: " + ex.getMessage());
		ex = ex.getNextException();
            }
        
        }
    }
    private void showSecondTermFilterEtos(int etos){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String selectString = "SELECT selVathmSecondTermFilterEtos(?);";
        PreparedStatement aStatePG = DBPostresqlAdmin.getPrepareStatement(selectString);
        ResultSet rs = DBPostresqlAdmin.getResultset();
        try {
            aStatePG.setInt(1, etos);
            rs = aStatePG.executeQuery();
            Object[] row = new Object[8];
            String columnvalue;
            while (rs.next()) {
                columnvalue = rs.getString(1);
                String[] a = columnvalue.substring(1, columnvalue.length()-1).split(",");
                for (int i = 0; i < a.length; i++) {
                    row[i] =a[i];
                }
                model.addRow(row);
            }
        } catch(SQLException ex) {
            System.out.println("\n -- SQL Exception --- \n");
            while(ex != null) {
		System.out.println("Message: " + ex.getMessage());
		ex = ex.getNextException();
            }
        
        }
    }
    private void showFirstTermFilterEtos(int etos){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String selectString = "SELECT selVathmFirstTermFilterEtos(?);";
        PreparedStatement aStatePG = DBPostresqlAdmin.getPrepareStatement(selectString);
        ResultSet rs = DBPostresqlAdmin.getResultset();
        try {
            aStatePG.setInt(1, etos);
            rs = aStatePG.executeQuery();
            Object[] row = new Object[8];
            String columnvalue;
            while (rs.next()) {
                columnvalue = rs.getString(1);
                String[] a = columnvalue.substring(1, columnvalue.length()-1).split(",");
                for (int i = 0; i < a.length; i++) {
                    row[i] =a[i];
                }
                model.addRow(row);
            }
        } catch(SQLException ex) {
            System.out.println("\n -- SQL Exception --- \n");
            while(ex != null) {
		System.out.println("Message: " + ex.getMessage());
		ex = ex.getNextException();
            }
        
        }
    }
    
    private void showTwoTermsWithFinalExamsFilterSidEtos(int sid, int etos){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String selectString = "SELECT selVathmTwoTermsWithFinalExamsFilterSidEtos(?,?);";
        PreparedStatement aStatePG = DBPostresqlAdmin.getPrepareStatement(selectString);
        model.setRowCount(0);
        ResultSet rs = DBPostresqlAdmin.getResultset();
        try {
            aStatePG.setInt(1, sid);
            aStatePG.setInt(2, etos);
            rs = aStatePG.executeQuery();
            Object[] row = new Object[8];
            String columnvalue;
            while (rs.next()) {
                columnvalue = rs.getString(1);
                String[] a = columnvalue.substring(1, columnvalue.length()-1).split(",");
                for (int i = 0; i < a.length; i++) {
                    row[i] =a[i];
                }
                model.addRow(row);
            }
        } catch(SQLException ex) {
            System.out.println("\n -- SQL Exception --- \n");
            while(ex != null) {
		System.out.println("Message: " + ex.getMessage());
		ex = ex.getNextException();
            }
        
        }
    }
    private void showOnePlusTwoTermsFilterSidEtos(int sid, int etos){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String selectString = "SELECT selVathmOnePlusTwoTermsFilterSidEtos(?,?);";
        PreparedStatement aStatePG = DBPostresqlAdmin.getPrepareStatement(selectString);
        ResultSet rs = DBPostresqlAdmin.getResultset();
        try {
            aStatePG.setInt(1, sid);
            aStatePG.setInt(2, etos);
            rs = aStatePG.executeQuery();
            Object[] row = new Object[8];
            String columnvalue;
            while (rs.next()) {
                columnvalue = rs.getString(1);
                String[] a = columnvalue.substring(1, columnvalue.length()-1).split(",");
                for (int i = 0; i < a.length; i++) {
                    row[i] =a[i];
                }
                model.addRow(row);
            }
        } catch(SQLException ex) {
            System.out.println("\n -- SQL Exception --- \n");
            while(ex != null) {
		System.out.println("Message: " + ex.getMessage());
		ex = ex.getNextException();
            }
        
        }
        
    }
    private void showFinalExamsFilterSidEtos(int sid, int etos){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String selectString = "SELECT selVathmFinalExamsFilterSidEtos(?,?);";
        PreparedStatement aStatePG = DBPostresqlAdmin.getPrepareStatement(selectString);
        ResultSet rs = DBPostresqlAdmin.getResultset();
        try {
            aStatePG.setInt(1, sid);
            aStatePG.setInt(2, etos);
            rs = aStatePG.executeQuery();
            Object[] row = new Object[8];
            String columnvalue;
            while (rs.next()) {
                columnvalue = rs.getString(1);
                String[] a = columnvalue.substring(1, columnvalue.length()-1).split(",");
                for (int i = 0; i < a.length; i++) {
                    row[i] =a[i];
                }
                model.addRow(row);
            }
        } catch(SQLException ex) {
            System.out.println("\n -- SQL Exception --- \n");
            while(ex != null) {
		System.out.println("Message: " + ex.getMessage());
		ex = ex.getNextException();
            }
        
        }
    }
    private void showSecondTermFilterSidEtos(int sid, int etos){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String selectString = "SELECT selVathmSecondTermFilterSidEtos(?,?);";
        PreparedStatement aStatePG = DBPostresqlAdmin.getPrepareStatement(selectString);
        ResultSet rs = DBPostresqlAdmin.getResultset();
        try {
            aStatePG.setInt(1, sid);
            aStatePG.setInt(2, etos);
            rs = aStatePG.executeQuery();
            Object[] row = new Object[8];
            String columnvalue;
            while (rs.next()) {
                columnvalue = rs.getString(1);
                String[] a = columnvalue.substring(1, columnvalue.length()-1).split(",");
                for (int i = 0; i < a.length; i++) {
                    row[i] =a[i];
                }
                model.addRow(row);
            }
        } catch(SQLException ex) {
            System.out.println("\n -- SQL Exception --- \n");
            while(ex != null) {
		System.out.println("Message: " + ex.getMessage());
		ex = ex.getNextException();
            }
        
        }
    }
    private void showFirstTermFilterSidEtos(int sid, int etos){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String selectString = "SELECT selVathmFirstTermFilterSidEtos(?,?);";
        PreparedStatement aStatePG = DBPostresqlAdmin.getPrepareStatement(selectString);
        ResultSet rs = DBPostresqlAdmin.getResultset();
        try {
            aStatePG.setInt(1, sid);
            aStatePG.setInt(2, etos);
            rs = aStatePG.executeQuery();
            Object[] row = new Object[8];
            String columnvalue;
            while (rs.next()) {
                columnvalue = rs.getString(1);
                String[] a = columnvalue.substring(1, columnvalue.length()-1).split(",");
                for (int i = 0; i < a.length; i++) {
                    row[i] =a[i];
                }
                model.addRow(row);
            }
        } catch(SQLException ex) {
            System.out.println("\n -- SQL Exception --- \n");
            while(ex != null) {
		System.out.println("Message: " + ex.getMessage());
		ex = ex.getNextException();
            }
        
        }
    }
    
}
